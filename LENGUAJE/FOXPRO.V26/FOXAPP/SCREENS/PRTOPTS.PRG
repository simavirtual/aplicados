*       *********************************************************
*       *                                                         
*       * 05/05/94             PRTOPTS.SPR               13:58:05 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Walter J. Kennamer                                      
*       *                                                         
*       * Copyright (c) 1994 Microsoft Corp.                      
*       * One Microsoft Way                                       
*       * Redmond, WA  98027                                      
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************

DO CASE
CASE _DOS OR _UNIX      && no UNIX records in screen

	
	#REGION 0
	REGIONAL m.currarea, m.talkstat, m.compstat
	
	IF SET("TALK") = "ON"
		SET TALK OFF
		m.talkstat = "ON"
	ELSE
		m.talkstat = "OFF"
	ENDIF
	m.compstat = SET("COMPATIBLE")
	SET COMPATIBLE FOXPLUS
	
	*       *********************************************************
	*       *                                                         
	*       *                MS-DOS Window definitions                
	*       *                                                         
	*       *********************************************************
	*
	
	IF NOT WEXIST("_qpr0txs16")
		DEFINE WINDOW _qpr0txs16 ;
			FROM INT((SROW()-15)/2),INT((SCOL()-59)/2) ;
			TO INT((SROW()-15)/2)+14,INT((SCOL()-59)/2)+58 ;
			TITLE " Opciones de impresi¢n " ;
			FLOAT ;
			NOCLOSE ;
			SHADOW ;
			NOMINIMIZE ;
			DOUBLE ;
			COLOR SCHEME 5
	ENDIF
	
	
	*       *********************************************************
	*       *                                                         
	*       *          PRTOPTS/MS-DOS Setup Code - SECTION 2          
	*       *                                                         
	*       *********************************************************
	*
	
	#REGION 1
	
	skipvar = .T.
	stemname = makealias(juststem(dbfname))
	SELECT (stemname)
	createrb = 0
	reptrb   = 3
	layoutrb = 0
	pdrivr   = 0
	lastpd   = 1
	
	
	*       *********************************************************
	*       *                                                         
	*       *              PRTOPTS/MS-DOS Screen Layout               
	*       *                                                         
	*       *********************************************************
	*
	
	#REGION 1
	IF WVISIBLE("_qpr0txs16")
		ACTIVATE WINDOW _qpr0txs16 SAME
	ELSE
		ACTIVATE WINDOW _qpr0txs16 NOSHOW
	ENDIF
	@ 7,8 GET pdrivrb ;
		PICTURE "@*RVN Usar controlador de impresora actual;Usar controlador de impresora del informe;No usar controlador de impresora" ;
		SIZE 1,45,0 ;
		DEFAULT 1
	@ 4,4 GET m.reptrb ;
		PICTURE "@*RVN \<Modificar informe;C\<onfigurar impresi¢n;\<Imprimir informe" ;
		SIZE 1,24,0 ;
		DEFAULT 1 ;
		VALID _qpr0txszn()
	@ 1,4 GET createrb ;
		PICTURE "@*RVN C\<rear informe" ;
		SIZE 1,17,0 ;
		DEFAULT 1 ;
		VALID _qpr0txt5g()
	@ 2,8 GET layoutrb ;
		PICTURE "@*RVN Dise¤o de formulario;Dise¤o columnar" ;
		SIZE 1,24,0 ;
		DEFAULT 1 ;
		DISABLE
	@ 11,14 GET okcancl ;
		PICTURE "@*HN \!Aceptar;\? Cancelar " ;
		SIZE 1,12,4 ;
		DEFAULT 1 ;
		VALID _qpr0txta0()
	
	IF NOT WVISIBLE("_qpr0txs16")
		ACTIVATE WINDOW _qpr0txs16
	ENDIF
	
	
	*       *********************************************************
	*       *                                                         
	*       *     MS-DOSREAD contains clauses from SCREEN prtopts     
	*       *                                                         
	*       *********************************************************
	*
	
	READ CYCLE ;
		SHOW _qpr0txtib() ;
		MODAL
	
	RELEASE WINDOW _qpr0txs16
	
	#REGION 0
	IF m.talkstat = "ON"
		SET TALK ON
	ENDIF
	IF m.compstat = "ON"
		SET COMPATIBLE ON
	ENDIF
	
	
	*       *********************************************************
	*       *                                                         
	*       *               PRTOPTS/MS-DOS Cleanup Code               
	*       *                                                         
	*       *********************************************************
	*
	
	#REGION 1
	skipvar = .F.
	

CASE _MAC

	
	#REGION 0
	REGIONAL m.currarea, m.talkstat, m.compstat
	
	IF SET("TALK") = "ON"
		SET TALK OFF
		m.talkstat = "ON"
	ELSE
		m.talkstat = "OFF"
	ENDIF
	m.compstat = SET("COMPATIBLE")
	SET COMPATIBLE FOXPLUS
	
	m.rborder = SET("READBORDER")
	SET READBORDER ON
	
	*       *********************************************************
	*       *                                                         
	*       *              Macintosh Window definitions               
	*       *                                                         
	*       *********************************************************
	*
	
	IF NOT WEXIST("_qpr0txtub")
		DEFINE WINDOW _qpr0txtub ;
			AT  0.000, 0.000  ;
			SIZE 17.615,43.000 ;
			TITLE "Print Options" ;
			FONT "Geneva", 10 ;
			FLOAT ;
			NOCLOSE ;
			SHADOW ;
			DOUBLE
		MOVE WINDOW _qpr0txtub CENTER
	ENDIF
	
	
	*       *********************************************************
	*       *                                                         
	*       *        PRTOPTS/Macintosh Setup Code - SECTION 2         
	*       *                                                         
	*       *********************************************************
	*
	
	#REGION 1
	
	skipvar = .T.
	stemname = makealias(juststem(dbfname))
	SELECT (stemname)
	createrb = 0
	reptrb   = 3
	layoutrb = 0
	pdrivr   = 0
	lastpd   = 1
	
	
	*       *********************************************************
	*       *                                                         
	*       *             PRTOPTS/Macintosh Screen Layout             
	*       *                                                         
	*       *********************************************************
	*
	
	#REGION 1
	IF WVISIBLE("_qpr0txtub")
		ACTIVATE WINDOW _qpr0txtub SAME
	ELSE
		ACTIVATE WINDOW _qpr0txtub NOSHOW
	ENDIF
	@ 9.385,7.000 GET pdrivrb ;
		PICTURE "@*RVN3 Use current printer driver;Use report printer driver;Use no printer driver" ;
		SIZE 1.308,26.167,0.000 ;
		DEFAULT 1 ;
		FONT "Geneva", 10 ;
		STYLE "T"
	@ 5.385,3.000 GET m.reptrb ;
		PICTURE "@*RVN3 \<Modify report;Printer \<setup;\<Print report" ;
		SIZE 1.308,15.333,0.000 ;
		DEFAULT 1 ;
		FONT "Geneva", 10 ;
		STYLE "T" ;
		VALID _qpr0txu3t()
	@ 14.846,7.000 GET okcancl ;
		PICTURE "@*HN3 \!OK;\?Cancel" ;
		SIZE 1.462,11.000,4.000 ;
		DEFAULT 1 ;
		FONT "Geneva", 10 ;
		STYLE "B" ;
		VALID _qpr0txudy()
	@ 1.077,3.000 GET createrb ;
		PICTURE "@*RVN3 C\<reate report" ;
		SIZE 1.308,15.000,0.000 ;
		DEFAULT 1 ;
		FONT "Geneva", 10 ;
		STYLE "T" ;
		VALID _qpr0txumi()
	@ 2.615,7.000 GET layoutrb ;
		PICTURE "@*RVN3 Form layout;Columnar layout" ;
		SIZE 1.308,17.333,0.000 ;
		DEFAULT 1 ;
		FONT "Geneva", 10 ;
		STYLE "T" ;
		DISABLE
	
	IF NOT WVISIBLE("_qpr0txtub")
		ACTIVATE WINDOW _qpr0txtub
	ENDIF
	
	
	*       *********************************************************
	*       *                                                         
	*       *   MacintoshREAD contains clauses from SCREEN prtopts    
	*       *                                                         
	*       *********************************************************
	*
	
	READ CYCLE ;
		SHOW _qpr0txurt() ;
		MODAL
	
	RELEASE WINDOW _qpr0txtub
	
	#REGION 0
	
	SET READBORDER &rborder
	
	IF m.talkstat = "ON"
		SET TALK ON
	ENDIF
	IF m.compstat = "ON"
		SET COMPATIBLE ON
	ENDIF
	
	
	*       *********************************************************
	*       *                                                         
	*       *             PRTOPTS/Macintosh Cleanup Code              
	*       *                                                         
	*       *********************************************************
	*
	
	#REGION 1
	skipvar = .F.
	

CASE _WINDOWS

	
	#REGION 0
	REGIONAL m.currarea, m.talkstat, m.compstat
	
	IF SET("TALK") = "ON"
		SET TALK OFF
		m.talkstat = "ON"
	ELSE
		m.talkstat = "OFF"
	ENDIF
	m.compstat = SET("COMPATIBLE")
	SET COMPATIBLE FOXPLUS
	
	m.rborder = SET("READBORDER")
	SET READBORDER ON
	
	*       *********************************************************
	*       *                                                         
	*       *               Windows Window definitions                
	*       *                                                         
	*       *********************************************************
	*
	
	IF NOT WEXIST("_qpr0txuzm")
		DEFINE WINDOW _qpr0txuzm ;
			AT  0.000, 0.000  ;
			SIZE 17.462,64.667 ;
			TITLE " Opciones de impresión " ;
			FONT "MS Sans Serif", 8 ;
			STYLE "B" ;
			FLOAT ;
			NOCLOSE ;
			SHADOW ;
			NOMINIMIZE ;
			DOUBLE ;
			COLOR RGB(,,,192,192,192)
		MOVE WINDOW _qpr0txuzm CENTER
	ENDIF
	
	
	*       *********************************************************
	*       *                                                         
	*       *         PRTOPTS/Windows Setup Code - SECTION 2          
	*       *                                                         
	*       *********************************************************
	*
	
	#REGION 1
	
	skipvar = .T.
	stemname = makealias(juststem(dbfname))
	SELECT (stemname)
	createrb = 0
	reptrb   = 3
	layoutrb = 0
	pdrivr   = 0
	lastpd   = 1
	
	
	*       *********************************************************
	*       *                                                         
	*       *              PRTOPTS/Windows Screen Layout              
	*       *                                                         
	*       *********************************************************
	*
	
	#REGION 1
	IF WVISIBLE("_qpr0txuzm")
		ACTIVATE WINDOW _qpr0txuzm SAME
	ELSE
		ACTIVATE WINDOW _qpr0txuzm NOSHOW
	ENDIF
	@ 9.385,9.333 GET pdrivrb ;
		PICTURE "@*RVN Usar controlador de impresora actual;Usar controlador de impresora del informe;No usar controlador de impresora" ;
		SIZE 1.308,43.833,0.000 ;
		DEFAULT 1 ;
		FONT "MS Sans Serif", 8 ;
		STYLE "BT" ;
		COLOR ,,,,,,,,RGB(,,,192,192,192),RGB(,,,192,192,192)
	@ 5.385,5.333 GET m.reptrb ;
		PICTURE "@*RVN \<Modificar informe;C\<onfigurar impresión;\<Imprimir informe" ;
		SIZE 1.308,23.667,0.000 ;
		DEFAULT 1 ;
		FONT "MS Sans Serif", 8 ;
		STYLE "BT" ;
		VALID _qpr0txv9j() ;
		COLOR ,,,,,,,,RGB(,,,192,192,192),RGB(,,,192,192,192)
	@ 1.077,5.333 GET createrb ;
		PICTURE "@*RVN C\<rear informe" ;
		SIZE 1.308,17.000,0.000 ;
		DEFAULT 1 ;
		FONT "MS Sans Serif", 8 ;
		STYLE "BT" ;
		VALID _qpr0txvig() ;
		COLOR ,,,,,,,,RGB(,,,192,192,192),RGB(,,,192,192,192)
	@ 2.538,9.333 GET layoutrb ;
		PICTURE "@*RVN Formato formulario;Formato columnas" ;
		SIZE 1.308,21.833,0.000 ;
		DEFAULT 1 ;
		FONT "MS Sans Serif", 8 ;
		STYLE "BT" ;
		DISABLE ;
		COLOR ,,,,,,,,RGB(,,,192,192,192),RGB(,,,192,192,192)
	@ 14.538,19.500 GET okcancl ;
		PICTURE "@*HN \!\<Aceptar;\?\<Cancelar" ;
		SIZE 1.923,11.000,4.000 ;
		DEFAULT 1 ;
		FONT "MS Sans Serif", 8 ;
		STYLE "B" ;
		VALID _qpr0txvou()
	
	IF NOT WVISIBLE("_qpr0txuzm")
		ACTIVATE WINDOW _qpr0txuzm
	ENDIF
	
	
	*       *********************************************************
	*       *                                                         
	*       *    WindowsREAD contains clauses from SCREEN prtopts     
	*       *                                                         
	*       *********************************************************
	*
	
	READ CYCLE ;
		SHOW _qpr0txvxe() ;
		MODAL
	
	RELEASE WINDOW _qpr0txuzm
	
	#REGION 0
	
	SET READBORDER &rborder
	
	IF m.talkstat = "ON"
		SET TALK ON
	ENDIF
	IF m.compstat = "ON"
		SET COMPATIBLE ON
	ENDIF
	
	
	*       *********************************************************
	*       *                                                         
	*       *              PRTOPTS/Windows Cleanup Code               
	*       *                                                         
	*       *********************************************************
	*
	
	#REGION 1
	skipvar = .F.
	

ENDCASE


*       *********************************************************
*       *                                                         
*       * _QPR0TXSZN           m.reptrb VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       MS-DOS                             
*       * From Screen:         PRTOPTS,     Record Number:    3   
*       * Variable:            m.reptrb                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Radio Button                       
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txszn     &&  m.reptrb VALID
#REGION 1
DO CASE
CASE reptrb = 1
   lastpd = IIF(pdrivrb=0,lastpd,pdrivrb)
   pdrivrb = 0
   SHOW GET pdrivrb DISABLE
CASE reptrb = 2
   lastpd = IIF(pdrivrb=0,lastpd,pdrivrb)
   pdrivrb = 0
   SHOW GET pdrivrb DISABLE
CASE reptrb = 3
   pdrivrb = lastpd
   SHOW GET pdrivrb ENABLE
ENDCASE
createrb = 0
layoutrb = 0
SHOW GET layoutrb DISABLE
SHOW GET createrb


*       *********************************************************
*       *                                                         
*       * _QPR0TXT5G           createrb VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       MS-DOS                             
*       * From Screen:         PRTOPTS,     Record Number:    4   
*       * Variable:            createrb                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Radio Button                       
*       * Snippet Number:      2                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txt5g     &&  createrb VALID
#REGION 1
IF createrb = 1
   reptrb   = 0
   pdrivrb  = 0
   layoutrb = 1
   SHOW GET reptrb
   SHOW GET layoutrb ENABLE
   SHOW GET pdrivrb  DISABLE
ENDIF


*       *********************************************************
*       *                                                         
*       * _QPR0TXTA0           okcancl VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       MS-DOS                             
*       * From Screen:         PRTOPTS,     Record Number:    6   
*       * Variable:            okcancl                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      3                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txta0     &&  okcancl VALID
#REGION 1
IF okcancl = 1
   DO CASE
   CASE createrb = 1
      m.repname = UPPER(ALLTRIM(PUTFILE('Formulario de informe','','FRX','OK')))
      IF !EMPTY(m.repname)
         IF layoutrb = 1
            CREATE REPORT (m.repname) FROM (m.dbfname) FORM
         ELSE
            CREATE REPORT (m.repname) FROM (m.dbfname) COLUMN
         ENDIF
         MODIFY REPORT (m.repname)
      ENDIF
   CASE reptrb = 1
      MODIFY REPORT ?
   CASE reptrb = 2
      IF !regen
         mname = 'prtsetup.prg'
      ELSE
         mname = 'prtsetup.spr'
      ENDIF
      DO (mname)
   CASE reptrb = 3
      DO CASE
      CASE pdrivrb = 1
         DO putprt WITH ""
      CASE pdrivrb = 2
         DO putprt WITH "PDSETUP"
      CASE pdrivrb = 3
         old_driver = _PDRIVER
         _PDRIVER = ""
         DO putprt WITH ""
         _PDRIVER = old_driver
      ENDCASE
   ENDCASE
ELSE
   CLEAR READ
ENDIF




*       *********************************************************
*       *                                                         
*       * _QPR0TXTIB           Read Level Show                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       MS-DOS                             
*       * From Screen:         PRTOPTS                            
*       * Called By:           READ Statement                     
*       * Snippet Number:      4                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txtib     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: PRTOPTS
*
#REGION 1
SHOW GET reptrb,2 DISABLE
IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF

*       *********************************************************
*       *                                                         
*       * _QPR0TXU3T           m.reptrb VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Macintosh                          
*       * From Screen:         PRTOPTS,     Record Number:   16   
*       * Variable:            m.reptrb                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Radio Button                       
*       * Snippet Number:      5                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txu3t     &&  m.reptrb VALID
#REGION 1
DO CASE
CASE reptrb = 1
   lastpd = IIF(pdrivrb=0,lastpd,pdrivrb)
   pdrivrb = 0
   SHOW GET pdrivrb DISABLE
CASE reptrb = 2
   lastpd = IIF(pdrivrb=0,lastpd,pdrivrb)
   pdrivrb = 0
   SHOW GET pdrivrb DISABLE
CASE reptrb = 3
   pdrivrb = lastpd
   SHOW GET pdrivrb ENABLE
ENDCASE
createrb = 0
layoutrb = 0
SHOW GET layoutrb DISABLE
SHOW GET createrb


*       *********************************************************
*       *                                                         
*       * _QPR0TXUDY           okcancl VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Macintosh                          
*       * From Screen:         PRTOPTS,     Record Number:   17   
*       * Variable:            okcancl                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      6                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txudy     &&  okcancl VALID
#REGION 1
IF okcancl = 1
   DO CASE
   CASE createrb = 1
      m.repname = UPPER(ALLTRIM(PUTFILE('Report form','','FRX','OK')))
      IF !EMPTY(m.repname)
         IF layoutrb = 1
            CREATE REPORT (m.repname) FROM (m.dbfname) FORM
         ELSE
            CREATE REPORT (m.repname) FROM (m.dbfname) COLUMN
         ENDIF
         MODIFY REPORT (m.repname)
      ENDIF
   CASE reptrb = 1
      MODIFY REPORT ?
   CASE reptrb = 2
      IF !regen
         mname = 'prtsetup.prg'
      ELSE
         mname = 'prtsetup.spr'
      ENDIF
      DO (mname)
   CASE reptrb = 3
      DO CASE
      CASE pdrivrb = 1
         DO putprt WITH ""
      CASE pdrivrb = 2
         DO putprt WITH "PDSETUP"
      CASE pdrivrb = 3
         old_driver = _PDRIVER
         _PDRIVER = ""
         DO putprt WITH ""
         _PDRIVER = old_driver
      ENDCASE
   ENDCASE
ELSE
   CLEAR READ
ENDIF




*       *********************************************************
*       *                                                         
*       * _QPR0TXUMI           createrb VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Macintosh                          
*       * From Screen:         PRTOPTS,     Record Number:   18   
*       * Variable:            createrb                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Radio Button                       
*       * Snippet Number:      7                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txumi     &&  createrb VALID
#REGION 1
IF createrb = 1
   reptrb   = 0
   pdrivrb  = 0
   layoutrb = 1
   SHOW GET reptrb
   SHOW GET layoutrb ENABLE
   SHOW GET pdrivrb  DISABLE
ENDIF


*       *********************************************************
*       *                                                         
*       * _QPR0TXURT           Read Level Show                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Macintosh                          
*       * From Screen:         PRTOPTS                            
*       * Called By:           READ Statement                     
*       * Snippet Number:      8                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txurt     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: PRTOPTS
*
#REGION 1
SHOW GET reptrb,2 DISABLE
IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF

*       *********************************************************
*       *                                                         
*       * _QPR0TXV9J           m.reptrb VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         PRTOPTS,     Record Number:    9   
*       * Variable:            m.reptrb                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Radio Button                       
*       * Snippet Number:      9                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txv9j     &&  m.reptrb VALID
#REGION 1
DO CASE
CASE reptrb = 1
   lastpd = IIF(pdrivrb=0,lastpd,pdrivrb)
   pdrivrb = 0
   SHOW GET pdrivrb DISABLE
CASE reptrb = 2
   lastpd = IIF(pdrivrb=0,lastpd,pdrivrb)
   pdrivrb = 0
   SHOW GET pdrivrb DISABLE
CASE reptrb = 3
   pdrivrb = lastpd
   SHOW GET pdrivrb ENABLE
ENDCASE
createrb = 0
layoutrb = 0
SHOW GET layoutrb DISABLE
SHOW GET createrb


*       *********************************************************
*       *                                                         
*       * _QPR0TXVIG           createrb VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         PRTOPTS,     Record Number:   10   
*       * Variable:            createrb                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Radio Button                       
*       * Snippet Number:      10                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txvig     &&  createrb VALID
#REGION 1
IF createrb = 1
   reptrb   = 0
   pdrivrb  = 0
   layoutrb = 1
   SHOW GET reptrb
   SHOW GET layoutrb ENABLE
   SHOW GET pdrivrb  DISABLE
ENDIF


*       *********************************************************
*       *                                                         
*       * _QPR0TXVOU           okcancl VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         PRTOPTS,     Record Number:   12   
*       * Variable:            okcancl                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      11                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txvou     &&  okcancl VALID
#REGION 1
IF okcancl = 1
   DO CASE
   CASE createrb = 1
      m.repname = UPPER(ALLTRIM(PUTFILE('Formulario de informe','','FRX','Aceptar')))
      IF !EMPTY(m.repname)
         IF layoutrb = 1
            CREATE REPORT (m.repname) FROM (m.dbfname) FORM
         ELSE
            CREATE REPORT (m.repname) FROM (m.dbfname) COLUMN
         ENDIF
         MODIFY REPORT (m.repname)
      ENDIF
   CASE reptrb = 1
      MODIFY REPORT ?
   CASE reptrb = 2
      IF !regen
         mname = 'prtsetup.prg'
      ELSE
         mname = 'prtsetup.spr'
      ENDIF
      DO (mname)
   CASE reptrb = 3
      DO CASE
      CASE pdrivrb = 1
         DO putprt WITH ""
      CASE pdrivrb = 2
         DO putprt WITH "PDSETUP"
      CASE pdrivrb = 3
         old_driver = _PDRIVER
         _PDRIVER = ""
         DO putprt WITH ""
         _PDRIVER = old_driver
      ENDCASE
   ENDCASE
ELSE
   CLEAR READ
ENDIF




*       *********************************************************
*       *                                                         
*       * _QPR0TXVXE           Read Level Show                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         PRTOPTS                            
*       * Called By:           READ Statement                     
*       * Snippet Number:      12                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _qpr0txvxe     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: PRTOPTS
*
#REGION 1
SHOW GET reptrb,2 DISABLE
IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF


*       *********************************************************
*       *                                                         
*       *  PRTOPTS/Windows Supporting Procedures and Functions    
*       *                                                         
*       *********************************************************
*

#REGION 1

*       *********************************************************
*       *                                                         
*       *                PRTOPTS Procedure PUTPRT                 
*       *                                                         
*       *********************************************************
*


PROCEDURE PUTPRT
PARAMETERS REPTPARM
DO CASE
CASE _DOS
	
	m.repname = UPPER(ALLTRIM(GETFILE('FRX|LBX','Formulario de informe o etiqueta')))
	m.startrec = RECNO()
	IF !EMPTY(m.repname)
	   RELEASE m.repbut, m.repdest, m.okbut
	   PUBLIC m.repbut, m.repdest, m.okbut
	
	   IF !regen
	      mname = 'getdest.prg'  && dialog box to get output destination
	   ELSE
	      mname = 'getdest.spr'
	   ENDIF
	   DO (mname)
	
	   err_string = ON('ERROR')
	   ON ERROR DO rpterror
	
	   IF m.okbut = 1
	      DO CASE
	      CASE m.repbut = 1  && screen
	         m.startwin = WONTOP()
	         IF FILE(m.repname)
	            REPORT FORM (m.repname) PREVIEW
	         ELSE
	            MODIFY REPORT (m.repname)
	            IF FILE(m.repname)
	               REPORT FORM (m.repname) PREVIEW
	            ENDIF
	         ENDIF
	
	      CASE m.repbut = 2  && output to printer
	         IF SYS(13) <> "READY"
	            WAIT WINDOW "La impresora no est  preparada."
	         ELSE
	            IF FILE(m.repname)
	               WAIT WINDOW "Imprimiendo informe..." NOWAIT
	               REPORT FORM (m.repname) TO PRINT PROMPT NOCONSOLE &reptparm
	               WAIT WINDOW "­Informe impreso!" NOWAIT
	               =INKEY(2,"HM")
	               WAIT CLEAR
	            ELSE
	               MODIFY REPORT (m.repname)
	               IF FILE(m.repname)
	                  WAIT WINDOW "Imprimiendo informe..." NOWAIT
	                  REPORT FORM (m.repname) TO PRINT PROMPT NOCONSOLE &reptparm
	                  WAIT WINDOW "­Informe impreso!" NOWAIT
	                  =INKEY(2,"HM")
	                  WAIT CLEAR
	               ENDIF
	            ENDIF
	         ENDIF
	
	      CASE m.repbut = 3  && output to file
	         m.repdest = ALLTRIM(m.repdest)
	         IF !EMPTY(m.repdest)
	            m.win_string = "Imprimiendo en "+m.repdest
	            WAIT WINDOW m.win_string NOWAIT
	            IF FILE(m.repname)
	               REPORT FORM (m.repname) TO FILE (m.repdest) NOCONSOLE
	            ELSE
	               MODIFY REPORT (m.repname)
	               IF FILE(m.repname)
	                  REPORT FORM (m.repname) TO FILE (m.repdest) NOCONSOLE
	               ENDIF
	            ENDIF
	         ENDIF
	      ENDCASE
	   ENDIF
	ENDIF
	IF TYPE('err_string') <> 'U'
	   ON ERROR &err_string
	ELSE
	   ON ERROR
	ENDIF
	
	IF m.startrec <= RECCOUNT() AND m.startrec > 0
	   GOTO m.startrec   && back to starting position
	ELSE
	   GOTO TOP
	ENDIF
	
	*!*****************************************************************
	*!
	*!      Procedure: RPTERROR
	*!
	*!*****************************************************************
	
CASE _WINDOWS
	
	m.repname = UPPER(ALLTRIM(GETFILE('FRX|LBX','Formulario de informe y etiqueta')))
	m.startrec = RECNO()
	IF !EMPTY(m.repname)
	   RELEASE m.repbut, m.repdest, m.okbut
	   PUBLIC m.repbut, m.repdest, m.okbut
	
	   IF !regen
	      mname = 'getdest.prg'  && dialog box to get output destination
	   ELSE
	      mname = 'getdest.spr'
	   ENDIF
	   DO (mname)
	
	   err_string = ON('ERROR')
	   ON ERROR DO rpterror
	
	   IF m.okbut = 1
	      DO CASE
	      CASE m.repbut = 1  && screen
	         m.startwin = WONTOP()
	         IF FILE(m.repname)
	            REPORT FORM (m.repname) PREVIEW
	         ELSE
	            MODIFY REPORT (m.repname)
	            IF FILE(m.repname)
	               REPORT FORM (m.repname) PREVIEW
	            ENDIF
	         ENDIF
	
	      CASE m.repbut = 2  && output to printer
	         IF SYS(13) <> "READY"
	            WAIT WINDOW "La impresora no está preparada."
	         ELSE
	            IF FILE(m.repname)
	               WAIT WINDOW "Imprimiendo informe..." NOWAIT
	               REPORT FORM (m.repname) TO PRINT PROMPT NOCONSOLE &reptparm
	               WAIT WINDOW "¡Informe impreso!" NOWAIT
	               =INKEY(2,"HM")
	               WAIT CLEAR
	            ELSE
	               MODIFY REPORT (m.repname)
	               IF FILE(m.repname)
	                  WAIT WINDOW "Imprimiendo informe..." NOWAIT
	                  REPORT FORM (m.repname) TO PRINT PROMPT NOCONSOLE &reptparm
	                  WAIT WINDOW "¡Informe impreso!" NOWAIT
	                  =INKEY(2,"HM")
	                  WAIT CLEAR
	               ENDIF
	            ENDIF
	         ENDIF
	
	      CASE m.repbut = 3  && output to file
	         m.repdest = ALLTRIM(m.repdest)
	         IF !EMPTY(m.repdest)
	            m.win_string = "Imprimir en "+m.repdest
	            WAIT WINDOW m.win_string NOWAIT
	            IF FILE(m.repname)
	               REPORT FORM (m.repname) TO FILE (m.repdest) NOCONSOLE
	            ELSE
	               MODIFY REPORT (m.repname)
	               IF FILE(m.repname)
	                  REPORT FORM (m.repname) TO FILE (m.repdest) NOCONSOLE
	               ENDIF
	            ENDIF
	         ENDIF
	      ENDCASE
	   ENDIF
	ENDIF
	IF TYPE('err_string') <> 'U'
	   ON ERROR &err_string
	ELSE
	   ON ERROR
	ENDIF
	
	IF m.startrec <= RECCOUNT() AND m.startrec > 0
	   GOTO m.startrec   && back to starting position
	ELSE
	   GOTO TOP
	ENDIF
	
	*!*****************************************************************
	*!
	*!      Procedure: RPTERROR
	*!
	*!*****************************************************************
	
CASE _MAC
	
	m.repname = UPPER(ALLTRIM(GETFILE('FRX|LBX','Report or label form')))
	m.startrec = RECNO()
	IF !EMPTY(m.repname)
	   RELEASE m.repbut, m.repdest, m.okbut
	   PUBLIC m.repbut, m.repdest, m.okbut
	
	   IF !regen
	      mname = 'getdest.prg'  && dialog box to get output destination
	   ELSE
	      mname = 'getdest.spr'
	   ENDIF
	   DO (mname)
	
	   err_string = ON('ERROR')
	   ON ERROR DO rpterror
	
	   IF m.okbut = 1
	      DO CASE
	      CASE m.repbut = 1  && screen
	         m.startwin = WONTOP()
	         IF FILE(m.repname)
	            REPORT FORM (m.repname) PREVIEW
	         ELSE
	            MODIFY REPORT (m.repname)
	            IF FILE(m.repname)
	               REPORT FORM (m.repname) PREVIEW
	            ENDIF
	         ENDIF
	
	      CASE m.repbut = 2  && output to printer
	         IF SYS(13) <> "READY"
	            WAIT WINDOW "The printer is not ready."
	         ELSE
	            IF FILE(m.repname)
	               WAIT WINDOW "Printing report..." NOWAIT
	               REPORT FORM (m.repname) TO PRINT PROMPT NOCONSOLE &reptparm
	               WAIT WINDOW "Report printed!" NOWAIT
	               =INKEY(2,"HM")
	               WAIT CLEAR
	            ELSE
	               MODIFY REPORT (m.repname)
	               IF FILE(m.repname)
	                  WAIT WINDOW "Printing report..." NOWAIT
	                  REPORT FORM (m.repname) TO PRINT PROMPT NOCONSOLE &reptparm
	                  WAIT WINDOW "Report printed!" NOWAIT
	                  =INKEY(2,"HM")
	                  WAIT CLEAR
	               ENDIF
	            ENDIF
	         ENDIF
	
	      CASE m.repbut = 3  && output to file
	         m.repdest = ALLTRIM(m.repdest)
	         IF !EMPTY(m.repdest)
	            m.win_string = "Printing to "+m.repdest
	            WAIT WINDOW m.win_string NOWAIT
	            IF FILE(m.repname)
	               REPORT FORM (m.repname) TO FILE (m.repdest) NOCONSOLE
	            ELSE
	               MODIFY REPORT (m.repname)
	               IF FILE(m.repname)
	                  REPORT FORM (m.repname) TO FILE (m.repdest) NOCONSOLE
	               ENDIF
	            ENDIF
	         ENDIF
	      ENDCASE
	   ENDIF
	ENDIF
	IF TYPE('err_string') <> 'U'
	   ON ERROR &err_string
	ELSE
	   ON ERROR
	ENDIF
	
	IF m.startrec <= RECCOUNT() AND m.startrec > 0
	   GOTO m.startrec   && back to starting position
	ELSE
	   GOTO TOP
	ENDIF
	
	*!*****************************************************************
	*!
	*!      Procedure: RPTERROR
	*!
	*!*****************************************************************
	
ENDCASE

*       *********************************************************
*       *                                                         
*       *               PRTOPTS Procedure RPTERROR                
*       *                                                         
*       *********************************************************
*


PROCEDURE RPTERROR
DO CASE
CASE _DOS
	DO alert WITH "Error en informe. Puede que el formulario no corresponda a esta tabla."
	RETURN
CASE _WINDOWS
	DO alert WITH "Error al producir el informe. Puede que el formulario de informe no corresponda a esta base de datos."
	RETURN
CASE _MAC
	DO alert WITH "Error producing report.;The report form may not correspond to this database."
	RETURN
ENDCASE